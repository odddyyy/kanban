{"version":3,"sources":["src/script.js"],"names":["dev_url","heroku_url","Vue","el","data","contoh","backlog","onProcess","onReviewed","completed","isLogin","email_login","pass_login","name_reg","email_reg","pass_reg","err","error_msg","isAdd","add_desc","add_title","created","doLog","getData","methods","axios","method","url","headers","access_token","localStorage","then","filter","catch","console","log","sort","a","b","id","i","status","postLogin","post","email","password","token","setItem","response","logout","removeItem","empty","register","name","addForm","addNewTask","title","description","deleteTask","changeStatsNext","changed","changeStatsBack","back"],"mappings":"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","file":"script.baf0e655.js","sourceRoot":"..","sourcesContent":["const dev_url = 'http://localhost:3000'\nconst heroku_url = 'https://protected-crag-71554.herokuapp.com'\n\nnew Vue ({\n    el:'#app',\n    data: {\n        contoh:[],\n        backlog: null,\n        onProcess:null,\n        onReviewed:null,\n        completed:null,\n        isLogin: false,\n        email_login: ``,\n        pass_login: ``,\n        name_reg:``,\n        email_reg:``,\n        pass_reg:``,\n        err:false,\n        error_msg:``,\n        isAdd: false,\n        add_desc:``,\n        add_title:``\n\n    },\n    created() {\n        this.doLog()\n        this.getData()\n    },\n    methods:{\n        getData() {\n            // console.log(`masuk get data`)\n            axios({\n                method:'GET',\n                url:`${heroku_url}/tasks`,\n                headers:{access_token:localStorage.access_token}\n            })\n            .then(data => {\n                this.contoh = data.data\n                this.filter()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        },\n\n        filter() {\n            this.contoh.sort((a,b) => a.id-b.id)\n            this.backlog = this.contoh.filter((i) => {\n                return i.status == `Backlog`\n            })\n            this.onProcess = this.contoh.filter((i) => {\n                return i.status == `On Process`\n            })\n            this.onReviewed = this.contoh.filter((i) => {\n                return i.status == `On Reviewed`\n            })\n            this.completed = this.contoh.filter((i) => {\n                return i.status == `Completed`\n            })\n            \n        },\n\n        doLog() {\n            if (localStorage.access_token) {\n                this.isLogin = true\n            } else {\n                this.isLogin = false\n            }\n        },\n\n        postLogin() {\n            axios.post(`${heroku_url}/users/login`, {\n                email: this.email_login,\n                password: this.pass_login\n            })\n            .then(data => {\n                let token = data.data.access_token\n                localStorage.setItem('access_token', token)\n                this.getData()\n                this.doLog()\n            })\n            .catch(err => {\n                console.log(err.response.data)\n                this.err = true\n                this.error_msg = err.response.data\n            })\n        },\n\n        logout() {\n            localStorage.removeItem('access_token')\n            this.empty()\n            this.doLog()\n        },\n\n        empty() {\n            this.contoh = []\n            this.backlog = []\n            this.onProcess =[]\n            this.onReviewed =[]\n            this.completed =[]\n            this.email_login = ``\n            this.pass_login = ``\n            this.error_msg = ``\n            this.add_title = ``\n            this.add_desc = ``\n        },\n\n        register() {\n            axios.post(`${heroku_url}/users/register`, {\n                \n                    name: this.name_reg,\n                    email: this.email_reg,\n                    password: this.pass_reg\n                \n            })\n            .then(data => {\n                let token = data.data.access_token\n                localStorage.setItem('access_token', token)\n                this.doLog()\n                this.getData()\n            })\n            .catch(err => {\n\n            })\n        },\n\n        addForm() {\n            this.isAdd = true\n        },\n\n        addNewTask() {\n            axios({\n                method:'POST',\n                url:`${heroku_url}/tasks/add`,\n                headers:{access_token:localStorage.access_token},\n                data:{\n                    title: this.add_title,\n                    description: this.add_desc\n                }\n            })\n            .then(data => {\n                this.isAdd = false\n                this.getData()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        },\n\n        deleteTask(id) {\n            axios({\n                method:'DELETE',\n                url:`${heroku_url}/tasks/delete/${id}`,\n                headers:{access_token:localStorage.access_token}\n            })\n            .then(data => {\n                this.getData()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        },\n\n        changeStatsNext(id, status) {\n            let changed = ``\n            if (status == `Backlog`) {\n                changed = `On Process`\n            } else if (status == `On Process`){\n                changed = `On Reviewed`\n            } else if (status == `On Reviewed`) {\n                changed = `Completed`\n            }\n            axios({\n                method:'PUT',\n                url:`${heroku_url}/tasks/edit/${id}`,\n                headers:{access_token:localStorage.access_token},\n                data:{\n                    status: changed\n                }\n            })\n            .then(data => {\n                this.getData()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        },\n\n        changeStatsBack(id, status) {\n            let back = ``\n            if (status == `Completed`) {\n                back = `On Reviewed`\n            } else if (status == `On Reviewed`){\n                back = `On Process`\n            } else if (status == `On Process`) {\n                back = `Backlog`\n            }\n            axios({\n                method:'PUT',\n                url:`${heroku_url}/tasks/edit/${id}`,\n                headers:{access_token:localStorage.access_token},\n                data:{\n                    status: back\n                }\n            })\n            .then(data => {\n                this.getData()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        }\n    }\n})"]}